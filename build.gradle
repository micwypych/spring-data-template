plugins {
    id 'java'
    id 'application'
    id 'groovy'
    id 'idea'
    id 'jacoco'
    id 'findbugs'
    id 'pmd'
    id 'checkstyle'
    //id 'org.springframework.boot'
    id "ru.itbasis.gradle.plugins.spring-boot-module-gradle-plugin" version "0.6"
    id "com.bmuschko.docker-java-application" version "3.1.0"
}

def RELEASE_TRAIN = 'Ingalls-SR6'

repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    compile 'com.google.guava:guava:21.0'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile group: 'com.h2database', name: 'h2'//, version: '1.4.196'
    compile group: 'org.threeten', name: 'threetenbp', version: '1.3.6'
    compile group: 'com.netflix.servo', name: 'servo-core', version: '0.12.17'

    testCompile 'org.codehaus.groovy:groovy-all:2.4.11'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'

}

//compileOnly "org.projectlombok:lombok:1.16.16"
//mainClassName = 'org.App'

checkstyle {
    ignoreFailures = false
    toolVersion = "8.2"
    configFile = rootProject.file('codequality/checkstyle.xml')

}

findbugs {
    ignoreFailures = false
    sourceSets = [sourceSets.main]
}

tasks.withType(FindBugs) {
    findbugs.toolVersion "3.0.1"
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    ignoreFailures = false
    ruleSets = []
    ruleSetFiles = rootProject.files("codequality/pmd.xml")
    sourceSets = [sourceSets.main]
}